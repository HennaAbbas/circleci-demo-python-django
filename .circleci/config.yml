version: 2.1
orbs:
  python: circleci/python@1.5.0
  heroku: circleci/heroku@1.2.6
  snyk: snyk/snyk@2.2.0
jobs:
  build_and_test:
  # this can be any name you choose
    parallelism: 50
    docker:
      - image: cimg/python:3.10.1
        environment:
          DATABASE_URL: postgresql://root@localhost/circle_test?sslmode=disable
      - image: cimg/postgres:17.3
        environment:
          POSTGRES_USER: root
          POSTGRES_DB: circle_test
      - image: cimg/mysql:8.0 
      - image: localstack/localstack:3.1.0
        environment:
          DEBUG: 1
          EDGE_PORT: 4566
          SERVICES: s3,sqs      
    steps:
      - checkout
      - python/install-packages:
          pkg-manager: pipenv
      - snyk/scan: 
          fail-on-issues: false
      - run:
          name: Run tests
          command: pipenv run python manage.py test # alternatively run `python -m pytest` if you are running vanilla pytest
      - run:
          name: Create Docker Image
          command: |
            docker build -t my-app:latest .          
   
      - store_test_results:
          path: results.xml
      - store_artifacts:
          path: test-results
          destination: tr1
      - persist_to_workspace:
          root: ~/project
          paths:
            - .
 
  deploy: # this can be any name you choose
    docker:
      - image: cimg/python:3.10.1
    steps:
      - attach_workspace:
          at: ~/project
      - heroku/deploy-via-git: 
          force: true # force push when pushing to the heroku remote, see: https://devcenter.heroku.com/articles/git

workflows:
  on_commit:
    jobs:
      - build_and_test


   

