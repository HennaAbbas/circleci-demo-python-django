version: 2.1
orbs:
  slack: circleci/slack@4.4.4
  
  #
  #test
commands:
  slack_build_notification:
    description: Sending notification message to Slack
    parameters:
      buildName:
        description: a message that decribes build basic info
        type: string
        default: "N/A"
      slackChannel:
        description: destination Slack channel of the notification
        type: string
        default: "N/A"
      artifactUrl:
        description: http url of the output build artifact
        type: string
        default: "N/A"
    steps:
      - run : echo << parameters.slackChannel >>
      - slack/notify:
          channel: << parameters.slackChannel >>
          custom: |
            {
              "blocks": [
                {
                  "type": "header",
                  "text": {
                    "type": "plain_text",
                    "text": "<< parameters.buildName >> Succeeded. :white_check_mark:",
                    "emoji": true
                  }
                },
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "*Project*:\n$CIRCLE_PROJECT_REPONAME"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Branch*:\n$CIRCLE_BRANCH"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Author*:\n$CIRCLE_USERNAME"
                    }
                  ]
                },
                {
                  "type": "actions",
                  "elements": [
                    {
                      "type": "button",
                      "text": {
                        "type": "plain_text",
                        "text": "View Job"
                      },
                      "url": "${CIRCLE_BUILD_URL}"
                    }
                  ]
                },
                {
                  "type": "actions",
                  "elements": [
                    {
                      "type": "button",
                      "text": {
                        "type": "plain_text",
                        "text": "Click Here to Check Artifacts"
                      },
                      "url": "${CIRCLE_BUILD_URL}"
                    }
                  ]
                }
              ]
            }
          event: pass

jobs:
  build:
    working_directory: ~/circleci-demo-python-django
    docker:
      - image: circleci/python:3.6.4
        environment:
          PIPENV_VENV_IN_PROJECT: true
          DATABASE_URL: postgresql://root@localhost/circle_test?sslmode=disable
      - image: circleci/postgres:9.6.2
        environment:
          POSTGRES_USER: root
          POSTGRES_DB: circle_test
    steps:
      - checkout
      - run: sudo chown -R circleci:circleci /usr/local/bin
      - run: sudo chown -R circleci:circleci /usr/local/lib/python3.6/site-packages
      - restore_cache:
          key: deps10-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
      - run:
          command: |
            sudo pip install pipenv
            pipenv install
      - save_cache:
          key: deps10-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
          paths:
            - '.venv'
            - '/usr/local/bin'
            - '/usr/local/lib/python3.6/site-packages'
      - run:
          command: |
            pipenv run python manage.py test
      - store_test_results:
          path: test-results
      - store_artifacts:
          path: test-results
          destination: tr1
      - slack/notify:
          template: basic_fail_1
          mentions: '@henna' 
          channel: HENNA-test-channel
      - slack_build_notification:
          buildName: Production Build $APP_VERSION_ENV
          slackChannel: $SLACK_NOTIFICATION_CHANNEL_PRODUCTION

         

workflows:
  my_workflow:
    jobs:
      - build:  
          context:
            - SLACK_SECRETS
    

#test

