version: 2.1
orbs:
  slack: circleci/slack@4.1
  run-with-retry: kimh/run-with-retry@1.0.0  

jobs:
  build:
    working_directory: ~/circleci-demo-python-django
    docker:
      - image: circleci/python:3.6.4
        environment:
          PIPENV_VENV_IN_PROJECT: true
          DATABASE_URL: postgresql://root@localhost/circle_test?sslmode=disable
          my_var: hello
      - image: circleci/postgres:9.6.2
        environment:
#           POSTGRES_USER: $USER
          POSTGRES_DB: circle_test
    parallelism: 3      
    steps:

      - checkout
      - run: pwd
      - run: ls
      - run: echo $my_var
#       - setup_remote_docker:
#           version: 20.10.2
#           docker_layer_caching: true                 
      - run: sudo chown -R circleci:circleci /usr/local/bin
      - run: sudo chown -R circleci:circleci /usr/local/lib/python3.6/site-packages
      - restore_cache:
          key: deps10-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
      - run:
          command: |
            sudo pip install pipenv
            pipenv install
      - save_cache:
          key: deps10-{{ .Branch }}
          paths:
            - '.venv'
            - '/usr/local/bin'
            - '/usr/local/lib/python3.6/site-packages'
#       - run:
#           command: |
#             pipenv run python manage.py test
      - run-with-retry/run-with-retry:
          command: pipenv run python manage.py test
          retry-count: 3
           
      - store_test_results:
          path: test-results
      - store_artifacts:
          path: test-results
          destination: tr1
#       - slack/notify:
#           template: basic_fail_1
#           event: always
#           mentions: '@henna'  
      - slack/notify:
#         channel: 
          event: always
          custom: |
            {
              "text": "<https://api.slack.com>",
              "blocks": [
                {
                  "type": "header",
                  "text": {
                    "type": "plain_text",
                    "text": "<https://api.slack.com>",
                    "emoji": true
                  }
                },
                {
                  "type": "actions",
                  "elements": [
                    {
                      "type": "button",
                      "text": {
                        "type": "plain_text",
                        "text": "View Job"
                      },
                      "url": "${CIRCLE_BUILD_URL}"
                    }
                  ]
                }
              ]
            }          

  test_job_1:
    working_directory: ~/circleci-demo-python-django
    docker:
      - image: circleci/python:3.6.4          
    steps:
      - run: |
            mkdir test_folder && touch test_file.txt && echo "this is a test" > test_folder/test_file.txt

      - persist_to_workspace: 
            root: ./test_folder
            paths: 
              - test_file.txt

  test_job_2:
    working_directory: ~/circleci-demo-python-django
    docker:
      - image: circleci/python:3.6.4          
    steps:
      - attach_workspace: 
            at: /tmp/workspace

workflows:
  my_workflow:
    jobs:
      - build:  
          context:
            - SLACK_SECRETS
  my_other_workflow:
    jobs:
      - test_job_2:     
          type: approval     
#   nightly:
#     triggers:
#       - schedule:
#           cron: "* * * * *"
#           filters:
#             branches:
#               only:
#                 - master
#                 - beta


#tests
